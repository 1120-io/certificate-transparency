syntax = "proto2";

package ct;

message KeyInfo {
  enum KeyType {
    ECDSA = 0;
    RSA = 1;
  }
  optional KeyType type = 1;
  // The serialized public key, PEM-encoded.
  optional string pem_key = 2;
}

// A merkle tree storing just enough hashes to be able to append new leaves
// and obtain the new root_hash, but unable to get arbitrary leaves or hashes
// within the tree.
message CompactMerkleTree {
  optional uint64 tree_size = 1;
  repeated bytes hashes = 2;
}

message CtLogMetadata {
  // The <log_server> path prefix. Responses are bound to the server
  // by this value.
  optional string log_server = 1;
  // The id as per the RFC, i.e., the key hash, base64-encoded.
  optional string log_id = 2;
  optional KeyInfo public_key_info = 3;
}

message CtLogs {
  repeated CtLogMetadata ctlog = 1;
}

message SthResponse {
  optional uint64 tree_size = 1;
  optional uint64 timestamp = 2;
  optional bytes sha256_root_hash = 3;
  optional bytes tree_head_signature = 4;
}

enum VerifyStatus {
  VERIFIED = 0;
  UNVERIFIED = 1;
  VERIFY_ERROR = 2;
}

// Currently just a placeholder proto so that we can add new fields without
// changing the DB schema.
message AuditInfo {
  optional VerifyStatus status = 1;
}

// The STH with additional auditing information such as signature verification
// status.
message AuditedSth {
  optional SthResponse sth = 1;
  optional AuditInfo audit = 2;
}

message EntryResponse {
  optional bytes leaf_input = 1;
  optional bytes extra_data = 2;
}

message ProofByHashResponse {
  optional uint64 leaf_index = 1;
  repeated bytes audit_path = 2;
}

message EntryAndProofResponse {
  optional EntryResponse entry = 1;
  repeated bytes audit_path = 2;
}

message MonitorState {
  optional SthResponse verified_sth = 1;
  // An STH whose leaf entries are yet to be retrieved. Its timestamp and
  // tree_size should both be strictly greater than the one for verified_sth.
  // If not, then this field should be ignored entirely.
  optional SthResponse pending_sth = 2;
  // A compact tree representing the last verified batch of leaves that is
  // is provably-consistent with pending_sth.
  optional CompactMerkleTree verified_tree = 3;
}
