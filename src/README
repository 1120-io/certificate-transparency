1. To build the log server, you need OpenSSL >= 1.0.0.

To find out your system version of OpenSSL:

$ openssl version

If the system version of OpenSSL is appropriate, then you can skip
this step.

Else you have to make a local version. To build a local version on
Linux, download and unpack OpenSSL source
(http://www.openssl.org/source/) and, in the openssl directory, run

$ ./config shared
$ make

2. You also need googletest, which you can get from here:
http://code.google.com/p/googletest/downloads/list.

Download, unpack and build. On any system this is likely to work on,
this should work:

$ cd make && make && make gtest.a

Our Makefiles are configured to work with this method, and may need
tweaking if you do something different.

Note that if you are on a BSD system "make" will appear to work, but
you'll get a link error. Use "gmake" instead.

(Tested with gtest-1.6.0)

3. You will also need protobuf, from:
http://code.google.com/p/protobuf/downloads/list.

(Tested with protobuf-2.4.1)

Download, unpack, and follow the instructions to build and install.

4. You will also need gflags and glog, from:
http://code.google.com/p/gflags/
and
http://code.google.com/p/google-glog/

(Tested with gflags-1.6, gflags-2.0 and glog 0.3.1 and 0.3.2)

Download, unpack, and follow the instructions to build and install.
Be sure to install gflags before building and installing glog to avoid link
errors later on.

5. And you will need a copy of sqlite3 installed on your system.

6. Then, you can build the log server by pointing to your custom OpenSSL
(if needed), and local gtest (if not installed):

$ make OPENSSLDIR=<path to openssl> GTESTDIR=<path to gtest>

Once more, use gmake on BSD systems.

7. Finally, run unit tests:

$ make OPENSSLDIR=<path to openssl> GTESTDIR=<path to gtest> test

-----END-TO-END TESTS-----

8. For end-to-end server-client tests, you will need to install Apache
and point the tests to it. See test/README for how to do so.

-----TESTING AND LOGGING OPTIONS-----

Note that several tests write files on disk. The default directory for
storing temporary testdata is /tmp. You can change
this by setting TMPDIR=<tmpdir> for make.

End-to-end tests also create temporary certificate and server files in
src/test/tmp
All these files are cleaned up after a successful test run.

For logging options, see
http://google-glog.googlecode.com/svn/trunk/doc/glog.html

By default, unit tests log to stderr, and log only messages with a FATAL level
(i.e., those that result in abnormal program termination).
You can override the defaults with command-line flags.

End-to-end tests log everything at INFO level and above.
